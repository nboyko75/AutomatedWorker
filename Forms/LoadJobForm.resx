<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAot9dDmllYq1rZyR8IR3bv8rJyT/AAAA/wAA
        AP8AAAD/AAAA/ysnJP+Ed27/rp2R9Z6PhKYsJycuAAAAGAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgjoVWrp2S97Ghlf+3qJ3/u6yi/72v
        pf+mm5P/e3Vw/4F7dv+vpZ3/w7eu/7+yqP+3qJ3/r56S/6iZjNEaGhMoAAAAEwAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoZCFLrCek/eyo5f/s6OX/7Cf
        k/+vnpL/sJ+T/7Cfk/+vnpL/r56S/7CglP+2p5z/wrWr/8W5sP++saf/sJ+T/5mKgJQAAAAcAAAACQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvn5PAsqKW/7Gg
        lv+wn5T/taWa/7ipn/+4qZ//tqec/7Skmf+yopf/sKCU/6+ekv+xoZX/wrWr/8W5sP+8rqT/rp2R9SQk
        HisAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArZ+SOLOj
        mP+zo5f/tKSY/8Cyqf/CtKv/v7Ko/72upP+6q6H/uKme/7amm/+0pJn/sqKW/7Cfk/+1pZr/w7eu/8W5
        sP+zo5j/iXxzcwAAABUAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACxo5eWtaWa/7Wlmv/FurH/yL20/8a6sv/Et67/wbSr/7+xp/+8rqT/uqyh/7eonv+2ppv/tKSY/7Gh
        lf+/saf/w7eu/7yuo/+ikoeyAAAAGQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALamm9G2p5z/wrWs/8/Evf/Mwrr/yr+3/8i8tP/GubH/xLeu/8G0qv+/saj/vK6k/7qr
        of+3qJ3/taab/7mroP/Ctaz/wLOp/6qajtsAAAAbAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAuKme87eonv/SyMH/08rD/9HHwP/PxL3/zMK6/8q/t//IvLT/xrqx/8O2
        rf/Bs6v/vrCn/7yupP+6q6D/uqug/8Czqv/BtKr/rp2S9wAAABwAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5q6D/vK6k/9nRy//Xz8n/1czF/9LJwv/Rxr//zsS9/8zB
        uv/Kvrf/x7yz/8W5sP/Dtq3/wbOq/76xp/+9r6X/wbSq/8Czqv+vnpL/AAAAHAAAAAkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALusovy5q6H/18/J/9bNx//Uy8T/0sjB/9DG
        vv/Ow7z/zMG5/8q+tv/IvLT/xrqx/8S3r//Ctaz/wLOp/76wp//As6n/v7Go/7CflPwAAAAcAAAACQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqpyQ9LennP/b1M7/2dHL/9fP
        yf/VzMb/08rE/9HHwf/Pxb7/zcO7/8zBuf/Jvrb/x7yz/8a5sf/Dt67/wrSr/76xpv+9r6X/ppSJ9AAA
        ABsAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSgnbtsqKX/9/Y
        0//d1tD/29PO/9nRy//Xzsj/1czG/9PKw//Rx8D/z8W+/83Du//LwLj/yb61/8e7s//FubD/vK2k/7mr
        oP+PfXLuAAAAFwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRk
        WdmtnJD/3tfS/+Da1f/e19P/3NXQ/9rSzf/Y0Mr/187I/9XMxf/SycL/0cfA/8/Evf/Nwrv/y7+4/8i8
        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
        Af/+AAED/wAEA//8MAP//AA///wD///+B/8=
</value>
  </data>
</root>